{"version":3,"sources":["Data/md sync /^/.//.*/.md$","Data/md/try.md","Components/MethodLink.jsx","Components/TimeLine.jsx","Components/Sort.jsx","HomePage/Home.jsx","Components/NavBar.jsx","Components/MD.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MethodLink","props","href","this","title","className","React","Component","TimeLine","TimeLineTitles","Data","console","log","Sort","Home","state","selectedTabId","setState","Tabs","defaultActiveKey","Tab","eventKey","NavBar","Nav","as","Item","Link","MD","mdURL","readmePath","require","fetch","then","response","text","markdown","marked","dangerouslySetInnerHTML","__html","App","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.827165bc.chunk.js","sourcesContent":["var map = {\n\t\"./try.md\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 166;","module.exports = __webpack_public_path__ + \"static/media/try.d6283f54.md\";","import React from 'react'\nimport Data from '../Data/Index.json'\nimport { Card } from \"@blueprintjs/core\";\n\nexport default class MethodLink extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <a href={`/${this.props.title}`}>\n                <Card className='TL-methodLink'>\n                    {this.props.title}\n                </Card>\n            </a>\n        )\n    }\n}\n","import React from 'react'\nimport Data from '../Data/Index.json'\nimport MethodLink from './MethodLink'\nimport './TimeLine.css'\n\nexport default class TimeLine extends React.Component{\n    render(){\n        var TimeLineTitles = Object.keys(Data['time-line'])\n        console.log(TimeLineTitles)\n        return(\n            <div className='TL-wrapper'>\n                <div className='TL-line'></div>\n                {\n                    TimeLineTitles.map(e =>\n                        <div className='TL-level'>\n                            <div className='TL-icon'></div>\n                            <h3>{e}</h3>\n                            <div className='TL-method-wrapper'>\n                                \n                                {\n                                    Data['time-line'][e].map(e => \n                                        <MethodLink title={e} />\n                                    )\n                                }\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class Sort extends React.Component{\n    render(){\n        return(\n            <div>\n                sort\n            </div>\n        )\n    }\n}","import React from 'react'\nimport TimeLine from '../Components/TimeLine'\nimport Sort from '../Components/Sort'\nimport { Tab, Tabs } from \"react-bootstrap\";\n\nexport default class Home extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            selectedTabId: 'temp',\n        }\n    }\n    handleTabChange(e){\n        this.setState({selectedTabId: e})\n    }\n    render(){\n        return(\n            <div>\n                <Tabs defaultActiveKey=\"timeline\" id=\"uncontrolled-tab-example\">\n                    <Tab eventKey=\"timeline\" title=\"依照設計歷程\">\n                        <TimeLine />\n                    </Tab>\n                    <Tab eventKey=\"sort\" title=\"依照屬性分類\">\n                        <Sort />\n                    </Tab>\n                </Tabs>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\n\nexport default class NavBar extends React.Component{\n    render(){\n        return(\n            <Nav defaultActiveKey=\"/home\" as=\"ul\">\n                <Nav.Item as=\"li\">\n                    <Nav.Link href=\"/\">首頁</Nav.Link>\n                </Nav.Item>\n            </Nav>\n        )\n    }\n}","import React from 'react'\nimport marked from \"marked\"\n\nexport default class MD extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {\n      console.log(`../Data/md/${this.props.mdURL}`)\n    const readmePath = require(`../Data/md/${this.props.mdURL}.md`);\n    fetch(readmePath)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {\n        this.setState({\n          markdown: marked(text)\n        })\n      })\n  }\n  render(){\n    const { markdown } = this.state;\n    return (\n      <div className='MD-container'>\n        <section className=\"MD\">\n          <article dangerouslySetInnerHTML={{__html: markdown}}></article>\n        </section>\n      </div>\n      \n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Data from './Data/Index.json'\nimport Home from './HomePage/Home'\nimport NavBar from './Components/NavBar'\nimport MD from './Components/MD'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        {\n          Data['all'].map(e => \n              <Route path={`/${e}`} render={() => <MD mdURL={Data['content'][e]['md']} />} />\n          )\n        }\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}